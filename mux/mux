#!/usr/bin/env python3
# PYTHON_ARGCOMPLETE_OK

import subprocess
import os
import time
import argparse
import argcomplete

terminal_command = ["kitty", "-o" ,"hide_window_decorations yes"]
def main():
    all_projects = [ f.split(".")[0] for f in os.listdir(os.environ["HOME"]+"/.config/tmuxinator")]
    parser = argparse.ArgumentParser(description='open tmuxinator project')
    parser.add_argument('project_name',help='tmuxinator project name',type=str).completer=argcomplete.completers.ChoicesCompleter(all_projects) 
    argcomplete.autocomplete(parser)
    project_name = parser.parse_args()
    new_window_pid = open_window()

    tmux_command = " \"tmuxinator start " + (str(project_name.project_name)) + "\""
    run_command(tmux_command)
def current_windows():
    try:
        application = terminal_command[0]
        pid = subprocess.check_output(["pgrep",application]).decode("utf-8").strip()
        return pid

    except subprocess.CalledProcessError:
        return []

def open_window():
    subprocess.Popen(terminal_command)
    time.sleep(1)

    return current_windows()

def run_command(command):
    carriage_return =   (" ; xdotool " + " key ") + "Return"
    full_command = ("xdotool " + " type ") + ( command ) + carriage_return
    print(full_command)

    subprocess.Popen(full_command,shell=True)

if __name__ == '__main__':
    main()
